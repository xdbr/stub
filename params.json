{"name":"Stub","tagline":"A language-agnostic project generator","body":"stub\r\n====\r\n\r\nstunningly simple & stupid language agnostic project generator\r\n\r\n## Installation\r\nRun\r\n    \r\n    curl --silent https://raw.github.com/xdbr/stub/master/install.sh | $SHELL\r\n\r\n...and follow the instructions\r\n\r\n## Usage\r\n\r\n### Stubbing out a project\r\n\r\n#### Using local template\r\n\r\n    stub project:new template=cpp to=var/foo name=foobar version=1.2.3\r\n\r\n#### Using remote (git-repo) template\r\n\r\n    stub project:new template=http://path/to/repo.git to=var/bar name=foobar version=1.2.3\r\n\r\n#### Finding out about variables that need to be set / optionally can be set\r\n\r\n    stub project:info template=template-name\r\n\r\n### Defining a project stub\r\n\r\n1. Generate your skeleton of how you want your files and folders to be layed out\r\n2. substitute all variables with mustaches that you liked to be filled in, e.g. `class {{classname}}`. This will be set by using `stub project new template=yourtemplatename classname=foo`\r\n3. write a file `project.json`, put it in the top directory of you skeleton.\r\n4. Use the following layout for your `project.json`:\r\n\r\n```\r\n    {\r\n      \"requires\": {\r\n        \"name\"   : \"string\",\r\n        \"version\": \"versionstring\"\r\n      },\r\n      \"optional\": {\r\n        \"author\": \"Quux\"\r\n      }\r\n    }\r\n```\r\n\r\n## Finding all tasks\r\n\r\n    stub -T\r\n    stub --tasks\r\n\r\n## Listing all templates\r\n\r\n    stub list:templates\r\n\r\n## Author\r\n\r\nDaniel B <daniel@codeedition.de>\r\n\r\n## License\r\n\r\nWTFPL","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}